# Configuration file for the Sphinx documentation builder.
#
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html


import fh_comm

import os
import sys
import inspect
import pkg_resources


# -- Project information -----------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#project-information

project = "fh_comm"
copyright = "2023, Christian B. Mendl"
author = "Christian B. Mendl"
release = "1.0.0"

# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.intersphinx",
    "sphinx.ext.napoleon",
    "sphinx.ext.mathjax",
    "sphinx.ext.linkcode",
    "nbsphinx",
]

napoleon_google_docstring = True
napoleon_numpy_docstring = False
napoleon_include_init_with_doc = True

autosummary_generate = True

autodoc_default_flags = ["members"]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = [".rst", ".md"]
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"


# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"


def linkcode_resolve(domain, info):
    """
    Code link resolve function for sphinx.ext.linkcode extension.
    """
    # adapted from https://gist.github.com/nlgranger/55ff2e7ff10c280731348a16d569cb73

    if domain != "py" or not info["module"]:
        return None

    modname = info["module"]
    #####
    ##print("modname:", modname)
    #####
    topmodulename = modname.split('.')[0]
    modpath = pkg_resources.require(topmodulename)[0].location
    ##print("modpath:", modpath)

    module = sys.modules.get(modname)
    ####
    ##print("module:", module)
    #####
    if module is None:
        return None

    obj = module
    fullname = info["fullname"]
    ##print("fullname:", fullname)
    for part in fullname.split('.'):
        obj = getattr(obj, part)
    ####
    #print("obj:", obj)
    #####

    try:
        filepath = os.path.relpath(inspect.getsourcefile(obj), modpath)
        ##print("filepath:", filepath)
        if filepath is None:
            return None
    except Exception:
       return None
    ####
    #print("obj after:", obj)
    #####

    try:
        source, linenum = inspect.getsourcelines(obj)
    except OSError:
        return None
    else:
        linestart, linestop = linenum, linenum + len(source) - 1

    return f"https://github.com/qc-tum/fermi_hubbard_commutators/tree/master/{filepath}#L{linestart}-L{linestop}"

    #linkcode_url.format(
        #filepath=filepath, linestart=linestart, linestop=linestop)

# def linkcode_resolve(domain, info):
#     """
#     Code link resolve function for sphinx.ext.linkcode extension.
#     """
#     if domain != "py":
#         return None
#     if not info["module"]:
#         return None
#     filename = info["module"].replace(".", "/")
#     if "fullname" in info:
#         anchor = "#:~:text=" + info["fullname"].split(".")[-1]
#     else:
#         anchor = ""
#     return f"https://github.com/qc-tum/fermi_hubbard_commutators/tree/master/{filename}.py{anchor}"


# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "**.ipynb_checkpoints", "Thumbs.db", ".DS_Store"]


# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output

html_theme = "sphinxdoc"
html_static_path = ["_static"]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = { "nosidebar": True }


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

intersphinx_mapping = {
    "python": ("https://docs.python.org/3/", None),
    "numpy":  ("https://numpy.org/doc/stable", None),
    "scipy":  ("https://docs.scipy.org/doc/scipy", None),
}
